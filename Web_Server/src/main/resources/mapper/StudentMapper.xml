<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newoj.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.newoj.bean.Student">
    <id column="stu_id" jdbcType="INTEGER" property="stuId" />
    <result column="stu_username" jdbcType="VARCHAR" property="stuUsername" />
    <result column="stu_password" jdbcType="VARCHAR" property="stuPassword" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_sloveed" jdbcType="INTEGER" property="stuSloveed" />
    <result column="stu_email" jdbcType="VARCHAR" property="stuEmail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, stu_username, stu_password, stu_name, stu_sloveed, stu_email
  </sql>
  <select id="selectByExample" parameterType="com.newoj.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.newoj.bean.StudentExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.newoj.bean.Student">
    insert into students (stu_id, stu_username, stu_password, 
      stu_name, stu_sloveed, stu_email
      )
    values (#{stuId,jdbcType=INTEGER}, #{stuUsername,jdbcType=VARCHAR}, #{stuPassword,jdbcType=VARCHAR}, 
      #{stuName,jdbcType=VARCHAR}, #{stuSloveed,jdbcType=INTEGER}, #{stuEmail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.newoj.bean.Student">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuUsername != null">
        stu_username,
      </if>
      <if test="stuPassword != null">
        stu_password,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuSloveed != null">
        stu_sloveed,
      </if>
      <if test="stuEmail != null">
        stu_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuUsername != null">
        #{stuUsername,jdbcType=VARCHAR},
      </if>
      <if test="stuPassword != null">
        #{stuPassword,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSloveed != null">
        #{stuSloveed,jdbcType=INTEGER},
      </if>
      <if test="stuEmail != null">
        #{stuEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.newoj.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuUsername != null">
        stu_username = #{record.stuUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPassword != null">
        stu_password = #{record.stuPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSloveed != null">
        stu_sloveed = #{record.stuSloveed,jdbcType=INTEGER},
      </if>
      <if test="record.stuEmail != null">
        stu_email = #{record.stuEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_username = #{record.stuUsername,jdbcType=VARCHAR},
      stu_password = #{record.stuPassword,jdbcType=VARCHAR},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sloveed = #{record.stuSloveed,jdbcType=INTEGER},
      stu_email = #{record.stuEmail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.newoj.bean.Student">
    update students
    <set>
      <if test="stuUsername != null">
        stu_username = #{stuUsername,jdbcType=VARCHAR},
      </if>
      <if test="stuPassword != null">
        stu_password = #{stuPassword,jdbcType=VARCHAR},
      </if>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSloveed != null">
        stu_sloveed = #{stuSloveed,jdbcType=INTEGER},
      </if>
      <if test="stuEmail != null">
        stu_email = #{stuEmail,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newoj.bean.Student">
    update students
    set stu_username = #{stuUsername,jdbcType=VARCHAR},
      stu_password = #{stuPassword,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sloveed = #{stuSloveed,jdbcType=INTEGER},
      stu_email = #{stuEmail,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>